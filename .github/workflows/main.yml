name: Multi-stage docker javaapp

# Trigger the workflow when code is pushed to the repository
on:
  [push]


jobs:
  build:
    # ubuntu environment to run the job on
    runs-on: ubuntu-latest
    # permissions for the job
    permissions:
      contents: read
      packages: write
    # Define the output variable for the versining  
    outputs:
      jar_version: ${{ steps.bump.outputs.jar_version}}

    steps:
    # Fetch the latest code in the repository
    - uses: actions/checkout@v2

    - name: patching jar version
      id: bump
      run: |
        # Get the latest version from Docker Hub
        OLD_VERSION=$(curl -s "https://hub.docker.com/v2/repositories/mbadakh/maven_home_assignment/tags/?page_size=100" | jq -r '.results[0].name')
        # Increment the patch version
        PATCH=$((${OLD_VERSION[@]:4:5} + 1)) 
        NEW_VERSION=${OLD_VERSION[@]::4}$PATCH
        echo "new version --> $NEW_VERSION "
        echo ::set-output name=jar_version::${NEW_VERSION}
        mvn -q versions:set -DnewVersion="${NEW_VERSION}" --file myapp/pom.xml
        cat myapp/pom.xml
        
        
    
    - name: Docker build
      run: |
        docker build . --tag mbadakh/maven_home_assignment:${{ steps.bump.outputs.jar_version }}
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker push
      run: |
        docker push mbadakh/maven_home_assignment:${{ steps.bump.outputs.jar_version }}
  run:
    runs-on: ubuntu-latest
    needs: [build]
    env:
      - 
    steps:
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Run container
      run: |
        docker run -i mbadakh/maven_home_assignment:${{ needs.build.outputs.jar_version }}

